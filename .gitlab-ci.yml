---
stages:
  - pre-setup
  - code-quality
  - validate
  - plan
  - apply
  - destroy

image:
  name: hashicorp/terraform:1.3.7
  entrypoint:
    - env

.terraform_init_template: &terraform_init_template
  before_script:
    - cd eks
    - terraform init -input=false -backend-config=backend.tfvars

.terraform_init_argocd_template: &terraform_init_argocd_template
  before_script:
    - cd argocd
    - terraform init -input=false -backend-config=backend.tfvars

.plan_template: &plan_template
  stage: plan
  <<: *terraform_init_template
  script:
    - terraform plan -out=$CI_PROJECT_DIR/eks.tfplan
      -var-file=sample.tfvars
      -input=false
  artifacts:
    paths:
      - eks.tfplan

.apply_template: &apply_template
  stage: apply
  when: manual
  <<: *terraform_init_template
  script:
    - terraform apply -input=false eks.tfplan

.plan_argocd_template: &plan_argocd_template
  when: manual
  stage: plan
  <<: *terraform_init_argocd_template
  script:
    - terraform plan -out=$CI_PROJECT_DIR/argocd.tfplan
      -input=false
  artifacts:
    paths:
      - argocd.tfplan

.apply_argocd_template: &apply_argocd_template
  stage: apply
  when: manual
  <<: *terraform_init_argocd_template
  script:
    - terraform apply -input=false argocd.tfplan

.destroy_argocd_template: &destroy_argocd_template
  stage: destroy
  when: manual
  <<: *terraform_init_argocd_template
  script:
    - terraform destroy
      -var-file=sample.tfvars
      -auto-approve

pre_setup_development:
  stage: pre-setup
  image:
    name: amazon/aws-cli:2.0.7
    entrypoint:
      - env
  variables:
    BUCKET_NAME: devops-demo.tfstate
  script:
    - aws s3 ls s3://${BUCKET_NAME} ||
      (aws s3 mb s3://${BUCKET_NAME} --region ${AWS_DEFAULT_REGION}
        && aws s3api put-bucket-versioning --bucket ${BUCKET_NAME}
        --versioning-configuration Status=Enabled)

terraform_lint:
  stage: code-quality
  tags:
    - linux
  image:
    name: wata727/tflint:0.15.5
    entrypoint:
      - env
  script:
    - tflint

terraform_fmt:
  stage: code-quality
  tags:
    - linux
  script:
    - cd eks
    - terraform fmt -check
    - cd argocd
    - terraform fmt -check

yaml_lint:
  stage: code-quality
  tags:
    - linux
  image:
    name: cytopia/yamllint:1.20
    entrypoint:
      - env
  script:
    - yamllint .

validate_development:
  stage: validate
  <<: *terraform_init_template
  script:
    - terraform validate

plan_development:
  environment:
    name: development
  <<: *plan_template

apply_development:
  environment:
    name: development
  <<: *apply_template

destroy_development:
  environment:
    name: development
  <<: *destroy_template

validate_argocd_development:
  stage: validate
  <<: *terraform_init_argocd_template
  script:
    - terraform validate

plan_argocd_development:
  environment:
    name: development
  <<: *plan_argocd_template

apply_argocd_development:
  environment:
    name: development
  <<: *apply_argocd_template

destroy_argocd_development:
  environment:
    name: development
  <<: *destroy_argocd_template
