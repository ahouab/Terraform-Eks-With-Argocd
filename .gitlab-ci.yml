---
stages:
  - pre-setup
  - code-quality
  - validate
  - plan
  - apply
  - destroy

image:
  name: hashicorp/terraform:1.3.7
  entrypoint:
    - env

.eks_terraform_init_template: &eks_terraform_init_template
  before_script:
    - cd eks
    - terraform init -input=false -backend-config=backend.tfvars

.argocd_terraform_init_template: &argocd_terraform_init_template
  before_script:
    - apk add --no-cache curl jq python3 py-pip git
    - pip install awscli
    - cd argocd
    - terraform init -input=false -backend-config=backend.tfvars

.eks_plan_template: &eks_plan_template
  stage: plan
  <<: *eks_terraform_init_template
  script:
    - terraform plan -out=$CI_PROJECT_DIR/eks.tfplan
      -var-file=sample.tfvars
      -input=false
  artifacts:
    paths:
      - eks.tfplan

.eks_apply_template: &eks_apply_template
  stage: apply
  when: manual
  <<: *eks_terraform_init_template
  script:
    - terraform apply -input=false $CI_PROJECT_DIR/eks.tfplan

.eks_destroy_template: &eks_destroy_template
  stage: destroy
  only:
    variables:
      - $PHASE == "DESTROY"
  <<: *eks_terraform_init_template
  script:
    - terraform destroy
      -var-file=sample.tfvars
      -auto-approve

.argocd_plan_template: &argocd_plan_template
  when: manual
  stage: plan
  <<: *argocd_terraform_init_template
  script:
    - terraform plan -out=$CI_PROJECT_DIR/argocd.tfplan
      -input=false
  artifacts:
    paths:
      - argocd.tfplan

.argocd_apply_template: &argocd_apply_template
  stage: apply
  when: manual
  <<: *argocd_terraform_init_template
  script:
    - aws s3 ls
    - terraform apply -input=false $CI_PROJECT_DIR/argocd.tfplan

.argocd_destroy_template: &argocd_destroy_template
  stage: destroy
  only:
    variables:
      - $PHASE == "DESTROY"
  <<: *argocd_terraform_init_template
  script:
    - terraform destroy
      -auto-approve

##############################################################################
##                          Pipeline Pre Setup                             ##
##############################################################################
pre_setup:
  stage: pre-setup
  image:
    name: amazon/aws-cli:2.0.7
    entrypoint:
      - env
  variables:
    BUCKET_NAME: devops-demo.tfstate
  script:
    - aws s3 ls s3://${BUCKET_NAME} ||
      (aws s3 mb s3://${BUCKET_NAME} --region ${AWS_DEFAULT_REGION}
        && aws s3api put-bucket-versioning --bucket ${BUCKET_NAME}
        --versioning-configuration Status=Enabled)

##############################################################################
##                         General Jobs for Code Quality                   ##
##############################################################################

terraform_lint:
  stage: code-quality
  tags:
    - linux
  image:
    name: wata727/tflint:0.15.5
    entrypoint:
      - env
  script:
    - tflint

terraform_fmt:
  stage: code-quality
  tags:
    - linux
  script:
    - cd eks
    - terraform fmt -check
    - cd ../argocd
    - terraform fmt -check

yaml_lint:
  stage: code-quality
  tags:
    - linux
  image:
    name: cytopia/yamllint:1.20
    entrypoint:
      - env
  script:
    - yamllint .

##############################################################################
##                             EKS Jobs                                    ##
##############################################################################

eks_validate:
  stage: validate
  <<: *eks_terraform_init_template
  script:
    - terraform validate

eks_plan:
  <<: *eks_plan_template

eks_apply:
  <<: *eks_apply_template

eks_destroy:
  <<: *eks_destroy_template

##############################################################################
##                             ArgoCD Jobs                                 ##
##############################################################################

argocd_validate:
  stage: validate
  <<: *argocd_terraform_init_template
  script:
    - terraform validate

plan_argocd:
  <<: *argocd_plan_template

apply_argocd:
  <<: *argocd_apply_template

destroy_argocd:
  <<: *argocd_destroy_template
